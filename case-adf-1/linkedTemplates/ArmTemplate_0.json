{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "case-adf-1"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "CreditInstitution"
		},
		"caserawdatalink_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'caserawdatalink'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "cpkjluz-ub18424",
					"user": "RAMEEZYOUSA1822",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/caserawdatalink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('caserawdatalink_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "PRODUCTID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "PRODUCTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "PRODUCTTYPE",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "DIM_PRODUCTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/caseaccounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Data Engineer Case Study - Accounts.csv",
						"container": "case-bronze"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/casedeposits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Data Engineer Case Study - Deposits.csv",
						"container": "case-bronze"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer",
						"type": "String"
					},
					{
						"name": "customer_type",
						"type": "String"
					},
					{
						"name": "deposit_type",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "exchange_rate",
						"type": "String"
					},
					{
						"name": "start_date",
						"type": "String"
					},
					{
						"name": "maturity_date",
						"type": "String"
					},
					{
						"name": "reference_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/caseloans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Data Engineer Case Study - Loans.csv",
						"container": "case-bronze"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer;customer_type;loan_type;country;amount;currency;exchange_rate;start_date;maturity_date;reference_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/errorlog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "erorrlogpipeline"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageaccounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-bb1f4b52-1958-4ea1-b071-10f1ad5554eb-c000.csv",
						"container": "case-silver"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stagedeposits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-64bfe128-a0b1-4c29-bdf3-7d55b90f3de5-c000.csv",
						"container": "case-gold"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageloans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "caserawdatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-3917eb4c-64b3-4df3-ad8d-f3e6ca956159-c000.csv",
						"container": "case-platinium"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/caserawdatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Accounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "ACCOUNTID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ACCOUNTNUMBER",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ACCOUNTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "ACCOUNTTYPE",
						"type": "VARCHAR"
					},
					{
						"name": "REFERENCEDATE",
						"type": "DATE"
					}
				],
				"typeProperties": {
					"schema": "STAGING",
					"table": "ACCOUNTS_STAGING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Deposits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMER",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_TYPE",
						"type": "VARCHAR"
					},
					{
						"name": "DEPOSIT_TYPE",
						"type": "VARCHAR"
					},
					{
						"name": "COUNTRY",
						"type": "VARCHAR"
					},
					{
						"name": "AMOUNT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "CURRENCY",
						"type": "VARCHAR"
					},
					{
						"name": "EXCHANGE_RATE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "START_DATE",
						"type": "DATE"
					},
					{
						"name": "MATURITY_DATE",
						"type": "DATE"
					},
					{
						"name": "REFERENCE_DATE",
						"type": "DATE"
					}
				],
				"typeProperties": {
					"schema": "STAGING",
					"table": "DEPOSITS_STAGING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Loans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMER",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_TYPE",
						"type": "VARCHAR"
					},
					{
						"name": "LOAN_TYPE",
						"type": "VARCHAR"
					},
					{
						"name": "COUNTRY",
						"type": "VARCHAR"
					},
					{
						"name": "AMOUNT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "CURRENCY",
						"type": "VARCHAR"
					},
					{
						"name": "EXCHANGE_RATE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "START_DATE",
						"type": "DATE"
					},
					{
						"name": "MATURITY_DATE",
						"type": "DATE"
					},
					{
						"name": "REFERENCE_DATE",
						"type": "DATE"
					}
				],
				"typeProperties": {
					"schema": "STAGING",
					"table": "LOANS_STAGING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/accounsstagingtoSF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "ACCOUNT_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "ACCOUNT_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "REFERENCE_DATE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "stageaccounts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Accounts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stageaccounts')]",
				"[concat(variables('factoryId'), '/datasets/staging_Accounts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/depositsstagingtoSF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "deptostag",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "CUSTOMER",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "CUSTOMER_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "DEPOSIT_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "CURRENCY",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "EXCHANGE_RATE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "START_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "MATURITY_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "REFERENCE_DATE",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "stagedeposits",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Deposits",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stagedeposits')]",
				"[concat(variables('factoryId'), '/datasets/staging_Deposits')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loanstagingSF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "stageloans",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Loans",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stageloans')]",
				"[concat(variables('factoryId'), '/datasets/staging_Loans')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowaccounts')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "caseaccounts",
								"type": "DatasetReference"
							},
							"name": "accounttransform"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stageaccounts",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> accounttransform",
						"accounttransform derive(Column_2 = replace(Column_2, ',', '.')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/caseaccounts')]",
				"[concat(variables('factoryId'), '/datasets/stageaccounts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowdeposits')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "casedeposits",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stagedeposits",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer as string,",
						"          customer_type as string,",
						"          deposit_type as string,",
						"          country as string,",
						"          amount as string,",
						"          currency as string,",
						"          exchange_rate as string,",
						"          start_date as string,",
						"          maturity_date as string,",
						"          reference_date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(amount = replace(amount, ',', '.'),",
						"          exchange_rate = replace(exchange_rate, ',', '.'),",
						"          maturity_date = toDate(iif(isNull(maturity_date), '1900-01-01', toString(maturity_date)), 'yyyy-MM-dd')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/casedeposits')]",
				"[concat(variables('factoryId'), '/datasets/stagedeposits')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowloans')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "caseloans",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stageloans",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer as string,",
						"          customer_type as string,",
						"          loan_type as string,",
						"          country as string,",
						"          amount as string,",
						"          currency as string,",
						"          exchange_rate as string,",
						"          start_date as string,",
						"          maturity_date as date,",
						"          reference_date as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(amount = replace(amount, ',', '.'),",
						"          exchange_rate = replace(exchange_rate, ',', '.'),",
						"          start_date = toDate(iif(isNull(start_date), '1900-01-01', toString(start_date)), 'yyyy-MM-dd')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/caseloans')]",
				"[concat(variables('factoryId'), '/datasets/stageloans')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tansformloansdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflowloans",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowloans",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowloans')]"
			]
		}
	]
}